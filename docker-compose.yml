version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - gateway

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - ./gateway:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/kira
    depends_on:
      - postgres
      - ocr-service
      - rag-service
      - valuation-service
      - agent-service

  ocr-service:
    build:
      context: ./ml-services/ocr_service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./ml-services/ocr_service:/app
    environment:
      - ENVIRONMENT=development

  rag-service:
    build:
      context: ./ml-services/rag_service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    volumes:
      - ./ml-services/rag_service:/app
    environment:
      - ENVIRONMENT=development

  valuation-service:
    build:
      context: ./ml-services/valuation_service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    volumes:
      - ./ml-services/valuation_service:/app
    environment:
      - ENVIRONMENT=development

  agent-service:
    build:
      context: ./ml-services/agent_service
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    volumes:
      - ./ml-services/agent_service:/app
    environment:
      - ENVIRONMENT=development

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=kira
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
